---
# http://docs.ansible.com/ansible/latest/set_fact_module.html
- name: Merge kibana_default and kibana variables
  set_fact:
    kibana_combined: "{{ kibana_defaults | combine(kibana, recursive=True) }}"

# https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html
# http://docs.ansible.com/ansible/latest/apt_key_module.html
- name: Add repository key
  apt_key:
    url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
    id: "46095ACC8548582C1A2699A9D27D666CD88E42B4"
    state: present

# https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html
# http://docs.ansible.com/ansible/latest/apt_repository_module.html
- name: Add Elastic 5.x repo (if choosing the 5.x version)
  apt_repository:
    repo: 'deb https://artifacts.elastic.co/packages/5.x/apt stable main'
    state: present
  when: "kibana_combined.version == '5.x'"
  
  # https://www.elastic.co/guide/en/elasticsearch/reference/2.4/setup-repositories.html
  # https://packages.elastic.co/elasticsearch/2.x/debian

- name: Update apt cache
  apt: update_cache=yes
  when: (kibana_combined.version == '5.x')

- name: Install from repo (if choosing the 5.x version)
  apt:
    name: kibana
    state: installed
  when: (kibana_combined.version == '5.x')

- name: Get the platform (i386 or amd64) of the virtual machine
  command: dpkg --print-architecture
  register: print_architecture

- name: And set the actual platform value as a variable
  set_fact:
    platform: "{{ print_architecture.stdout }}"

- name: Download deb (if choosing a specific version)
  get_url:
    url={{ elastic_url }}/downloads/kibana/kibana-{{ kibana_combined.version }}-{{ platform }}.deb
    dest=/opt/kibana.deb
  when: (kibana_combined.version != '5.x')

- name: Install from deb (if choosing a specific version)
  apt: deb=/opt/kibana.deb
  when: (kibana_combined.version != '5.x')

# http://docs.ansible.com/ansible/latest/file_module.html
- name: Create the Kibana logging directory
  file:
    path: /var/log/kibana/
    state: directory
    owner: kibana
    group: kibana

# http://docs.ansible.com/ansible/latest/file_module.html
- name: Create Kibana PID file
  file:
    path: /var/run/kibana.pid
    state: touch
    owner: kibana
    group: kibana

# http://docs.ansible.com/ansible/latest/template_module.html
- name: Copy config file
  template:
    src: "kibana.yml"
    dest: "{{ kibana_combined.config_include_dir }}/kibana.yml"
    owner: root
    group: root
    mode: 0644

- name: Restart Kibana
  service:
    name: "{{ kibana_combined.daemon }}"
    state: restarted
    sleep: 15

# - name: Wait for Kibana to become available
  # wait_for:
    # port: 5601
    # delay: 5
