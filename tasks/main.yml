---
# https://docs.ansible.com/ansible/latest/modules/set_fact_module.html
- name: Get the simplified major.minor version string
  set_fact:
    version_simple: "{{ kibana.version | regex_replace('^([0-9])\\.([0-9]*).*', '\\1.\\2') }}"

# https://docs.ansible.com/ansible/latest/modules/include_vars_module.html
- name: Include defaults for configuration, per the installed version.
  include_vars:
    file: main-{{ version_simple }}.yml

# http://docs.ansible.com/ansible/latest/set_fact_module.html
- name: Merge kibana_default and kibana variables
  set_fact:
    kibana_combined: "{{ kibana_defaults | combine(kibana, recursive=True) }}"

# Include OS-specific installation tasks.
- include_tasks: setup-RedHat.yml
  when:
    - ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when:
    - ansible_os_family == 'Debian'



# http://docs.ansible.com/ansible/latest/service_module.html
- name: Ensure Kibana auto-starts
  systemd:
    name: kibana
    enabled: yes

# http://docs.ansible.com/ansible/latest/file_module.html
- name: Create the Kibana logging directory
  file:
    path: /var/log/kibana/
    state: directory
    owner: kibana
    group: kibana

# http://docs.ansible.com/ansible/latest/template_module.html
- name: Copy config file
  template:
    src: "kibana-{{ version_simple }}.j2"
    dest: "{{ kibana_combined.config_include_dir }}/kibana.yml"
    owner: root
    group: root
    mode: 0644
  when:
    - not kibana_combined.install_only

- name: Restart Kibana
  systemd:
    name: "{{ kibana_combined.daemon }}"
    state: restarted
  when:
    - not kibana_combined.install_only

# http://docs.ansible.com/ansible/latest/service_module.html
- name: Ensure that the service is running
  systemd:
    name: kibana
    state: started
    enabled: yes
  when:
    - not kibana_combined.install_only

# https://docs.ansible.com/ansible/latest/modules/pause_module.html
- name: Wait for Kibana to initialize
  pause:
    seconds: 60
  when:
    - not kibana_combined.install_only
